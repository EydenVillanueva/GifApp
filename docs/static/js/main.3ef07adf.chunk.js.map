{"version":3,"sources":["components/AddCategory.js","components/GifGridItem.js","helpers/getGifs.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","categories","type","value","onChange","target","GifGridItem","title","url","className","src","alt","getGifs","category","a","request","encodeURI","fetch","response","json","data","map","img","id","images","downsized_medium","GifGrid","loading","state","setState","useEffect","then","useFetchGifs","renderImages","GifExpertApp","ReactDOM","render","document","getElementById"],"mappings":"mMAGaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EAEbC,mBAAS,IAFI,mBAE1CC,EAF0C,KAE9BC,EAF8B,KAejD,OACE,sBAAMC,SAVa,SAACC,GACrBA,EAAEC,iBAECJ,EAAWK,OAAOC,OAAS,IAC7BR,GAAe,SAAAS,GAAU,OAAKP,GAAL,mBAAoBO,OAC7CN,EAAc,MAKd,SACC,uBACCO,KAAK,OACLC,MAAOT,EACPU,SAhBsB,SAACP,GAAD,OAAOF,EAAcE,EAAEQ,OAAOF,aCS1CG,EAbK,SAAC,GAAkB,IAAjBC,EAAgB,EAAhBA,MAAOC,EAAS,EAATA,IAC5B,OACC,qBAAKC,UAAU,OAAf,SACC,qBAAKC,IAAKF,EAAKG,IAAKJ,O,uBCNVK,EAAO,uCAAG,WAAOC,GAAP,qBAAAC,EAAA,4DACF,mCACL,uCACTC,EAHgB,UAEP,uCAFO,cAGSC,UAAUH,GAHnB,6BACF,oCADE,SAKCI,MAAMF,GALP,cAKhBG,EALgB,gBAMDA,EAASC,OANR,uBAMfC,EANe,EAMfA,KANe,kBAQfA,EAAKC,KAAI,SAAAC,GAAQ,IAAD,EACtB,MAAO,CACNC,GAAID,EAAIC,GACRhB,MAAOe,EAAIf,MACXC,IAAG,UAAEc,EAAIE,cAAN,aAAE,EAAYC,iBAAiBjB,SAZd,4CAAH,sDC6BLkB,EAvBC,SAAC,GAAgB,IAAfb,EAAc,EAAdA,SAAc,ECHJ,SAACA,GAAc,IAAD,EACfpB,mBAAS,CAClC2B,KAAM,GACNO,SAAS,IAH+B,mBAClCC,EADkC,KAC3BC,EAD2B,KAczC,OARAC,qBAAU,WACTlB,EAAQC,GACNkB,MAAM,SAAAP,GAAM,OAAIK,EAAS,CACzBT,KAAMI,EACNG,SAAS,SAET,CAACd,IAEGe,EDT2BI,CAAanB,GAAvCc,EAFuB,EAEvBA,QAAeH,EAFQ,EAEdJ,KAQjB,OACC,sBAAKX,UAAU,YAAf,UACC,mCAAMI,EAAN,OACEc,GAAW,aATM,SAACH,GACrB,OAAO,6BACJA,EAAOH,KAAK,gBAAEE,EAAF,EAAEA,GAAIhB,EAAN,EAAMA,MAAOC,EAAb,EAAaA,IAAb,OAAsB,cAAC,EAAD,CAAsBD,MAAOA,EAAOC,IAAKA,GAAvBe,QAQrDU,CAAaT,OEKFU,EApBM,WAAO,IAAD,EAEUzC,mBAAS,CAAC,cAFpB,mBAEnBQ,EAFmB,KAEPT,EAFO,KAU1B,OACC,qCACC,8CACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,uBATM,6BACJS,EAAWoB,KAAK,SAAAR,GAAQ,OAAI,cAAC,EAAD,CAAwBA,SAAUA,GAApBA,Y,MCL/CsB,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.3ef07adf.chunk.js","sourcesContent":["import React, {useState} from 'react';\nimport PropTypes from 'prop-types';\n\nexport const AddCategory = ({ setCategories }) => {\n\t\n\tconst [inputValue, setInputValue] = useState('');\n\t\n\tconst handleInputChange = (e) => setInputValue(e.target.value);\n\t\n\tconst handleSubmit = (e) => {\n\t\te.preventDefault();\n\t\t\n\t\tif(inputValue.trim().length > 2){\n\t\t\tsetCategories( categories => [inputValue, ...categories]);\n\t\t\tsetInputValue('');\n\t\t}\n\t}\n\t\n\treturn (\n\t\t\t<form onSubmit={ handleSubmit }>\n\t\t\t\t<input\n\t\t\t\t\ttype=\"text\"\n\t\t\t\t\tvalue={inputValue}\n\t\t\t\t\tonChange={handleInputChange}\n\t\t\t\t/>\n\t\t\t</form>\n\t);\n};\n\nAddCategory.propTypes = {\n\tsetCategories: PropTypes.func.isRequired,\n}","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst GifGridItem = ({title, url}) => {\n\treturn (\n\t\t<div className=\"card\">\n\t\t\t<img src={url} alt={title}/>\n\t\t</div>\n\t);\n};\n\nGifGridItem.propTypes = {\n\ttitle: PropTypes.string.isRequired,\n\turl: PropTypes.string.isRequired,\n};\n\nexport default GifGridItem;\n","export const getGifs = async (category) => {\n\tconst giphyApiKey = 'ZNA0puKDxXLE6cvlFLQPYU39sxzpxXDe';\n\tconst gifUri = 'https://api.giphy.com/v1/gifs/search';\n\tconst request = `${gifUri}?q=${encodeURI(category)}&limit=10&api_key=${giphyApiKey}`;\n\t\n\tconst response = await fetch(request);\n\tconst {data} = await response.json();\n\n\treturn data.map(img => {\n\t\treturn {\n\t\t\tid: img.id,\n\t\t\ttitle: img.title,\n\t\t\turl: img.images?.downsized_medium.url\n\t\t}\n\t});\n};","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport GifGridItem from \"./GifGridItem\";\nimport {useFetchGifs} from \"../hooks/useFetchGifs\";\n\nconst GifGrid = ({category}) => {\n\t\n\tconst { loading, data: images } = useFetchGifs(category);\n\t\n\tconst renderImages = (images) => {\n\t\treturn <ol>\n\t\t\t{ images.map( ({id, title, url}) => <GifGridItem key={id} title={title} url={url} /> )}\n\t\t</ol>;\n\t}\n\t\n\treturn (\n\t\t<div className=\"card-grid\" >\n\t\t\t<h3> {category} </h3>\n\t\t\t{ loading && 'Loading...' }\n\t\t\t{renderImages(images)}\n\t\t</div>\n\t);\n};\n\nGifGrid.propTypes = {\n\tcategory: PropTypes.string.isRequired\n};\n\nexport default GifGrid;\n\n\n","import {useState, useEffect} from \"react\";\nimport {getGifs} from \"../helpers/getGifs\";\n\nexport const useFetchGifs = (category) => {\n\tconst [state, setState] = useState({\n\t\tdata: [],\n\t\tloading: true\n\t});\n\t\n\tuseEffect(() => {\n\t\tgetGifs(category)\n\t\t\t.then( images => setState({\n\t\t\t\tdata: images,\n\t\t\t\tloading: false\n\t\t\t}) )\n\t}, [category]);\n\t\n\treturn state;\n}","import React, { useState } from 'react';\n\nimport {AddCategory} from \"./components/AddCategory\";\nimport GifGrid from \"./components/GifGrid\";\n\nconst GifExpertApp = () => {\n\t\n\tconst [categories, setCategories] = useState(['Samurai x']);\n\t\n\tconst renderCategories = () => {\n\t\treturn <ol>\n\t\t\t{ categories.map( category => <GifGrid key={category} category={category} /> )}\n\t\t</ol>;\n\t}\n\t\n\treturn (\n\t\t<>\n\t\t\t<h2>GifExpertApp</h2>\n\t\t\t<AddCategory setCategories={setCategories} />\n\t\t\t<hr/>\n\t\t\t{ renderCategories() }\n\t\t</>\n\t);\n}\n\nexport default GifExpertApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp from './GifExpertApp';\n\nimport './index.css';\n\nReactDOM.render(\n  <GifExpertApp />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}